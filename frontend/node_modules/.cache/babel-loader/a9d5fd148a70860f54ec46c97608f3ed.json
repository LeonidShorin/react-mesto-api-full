{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseURL=_ref.baseURL;_classCallCheck(this,Api);this._URL=baseURL;}_createClass(Api,[{key:\"_handleError\",value:function _handleError(res,errorText){if(res.ok){return res.json();}return Promise.reject(\"\".concat(errorText,\". \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0438: \").concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(jwt){var _this=this;return fetch(this._URL+'/users/me',{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this._handleError(res,'Ошибка, не удалось загрузить данные пользователя');});}},{key:\"getInitialCards\",value:function getInitialCards(jwt){var _this2=this;return fetch(this._URL+'/cards',{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this2._handleError(res,'Ошибка, не удалось загрузить карточки');});}},{key:\"editProfile\",value:function editProfile(_ref2,jwt){var _this3=this;var name=_ref2.name,description=_ref2.description;return fetch(this._URL+'/users/me',{method:'PATCH',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)},body:JSON.stringify({name:name,about:description})}).then(function(res){return _this3._handleError(res,'Ошибка, не удалось обновить профиль пользователя');});}},{key:\"updateUserAvatar\",value:function updateUserAvatar(avatarLink,jwt){var _this4=this;return fetch(this._URL+'/users/me/avatar',{method:\"PATCH\",headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)},body:JSON.stringify({avatar:avatarLink})}).then(function(res){return _this4._handleError(res,'Ошибка, не удалось обновить аватар пользователя');});}},{key:\"addCard\",value:function addCard(_ref3,jwt){var _this5=this;var name=_ref3.name,link=_ref3.link;return fetch(this._URL+'/cards',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)},body:JSON.stringify({name:name,link:link})}).then(function(res){return _this5._handleError(res,'Ошибка, не удалось добавить карточку');});}},{key:\"deleteCard\",value:function deleteCard(cardId,jwt){var _this6=this;return fetch(this._URL+'/cards/'+cardId,{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this6._handleError(res,'Ошибка, не удалось удалить карточку');});}},{key:\"addLike\",value:function addLike(cardId,jwt){var _this7=this;return fetch(this._URL+'/cards/'+cardId+'/likes/',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this7._handleError(res,'Ошибка, не удалось поставить лайк карточке');});}},{key:\"removeLike\",value:function removeLike(cardId,jwt){var _this8=this;return fetch(this._URL+'/cards/'+cardId+'/likes/',{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this8._handleError(res,'Ошибка, не удалось удалить лайк карточки');});}}]);return Api;}();//Экземпляр класса Api для сетевых запросов\nexport var api=new Api({baseURL:'https://api.mestobyleonid.nomoredomains.work'});","map":{"version":3,"sources":["C:/Users/stanv/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","baseURL","_URL","res","errorText","ok","json","Promise","reject","status","jwt","fetch","method","headers","then","_handleError","name","description","body","JSON","stringify","about","avatarLink","avatar","link","cardId","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({baseURL}) {\r\n    this._URL = baseURL;\r\n  }\r\n\r\n  _handleError(res, errorText) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`${errorText}. Статус ошибки: ${res.status}`);\r\n  }\r\n\r\n  getUserInfo(jwt) {\r\n    return fetch(this._URL + '/users/me', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n    }})\r\n      .then((res) => {\r\n        return this._handleError(res, 'Ошибка, не удалось загрузить данные пользователя');\r\n      });\r\n  }\r\n\r\n\r\n  getInitialCards(jwt) {\r\n    return fetch(this._URL + '/cards', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`}\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось загрузить карточки')\r\n      });\r\n  }\r\n\r\n  editProfile({name, description}, jwt) {\r\n    return fetch(this._URL + '/users/me', {\r\n      method: 'PATCH',\r\n      headers: {'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${jwt}`},\r\n      body: JSON.stringify({\r\n        name: name, about: description\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось обновить профиль пользователя')\r\n      });\r\n  }\r\n\r\n  updateUserAvatar(avatarLink, jwt) {\r\n    return fetch(this._URL + '/users/me/avatar', {\r\n      method: \"PATCH\",\r\n      headers: {'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`},\r\n      body: JSON.stringify({\r\n        avatar: avatarLink\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось обновить аватар пользователя')\r\n      });\r\n  }\r\n\r\n  addCard({name, link}, jwt) {\r\n    return fetch(this._URL + '/cards', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify({\r\n        name: name, link: link\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось добавить карточку')\r\n      });\r\n  }\r\n\r\n  deleteCard(cardId, jwt) {\r\n    return fetch(this._URL + '/cards/' + cardId, {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`},\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось удалить карточку')\r\n      });\r\n  }\r\n\r\n  addLike(cardId, jwt) {\r\n    return fetch(this._URL + '/cards/' + cardId + '/likes/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось поставить лайк карточке')\r\n      });\r\n  }\r\n\r\n  removeLike(cardId, jwt) {\r\n    return fetch(this._URL + '/cards/' + cardId + '/likes/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return this._handleError(res, 'Ошибка, не удалось удалить лайк карточки')\r\n      });\r\n  }\r\n}\r\n//Экземпляр класса Api для сетевых запросов\r\nexport const api = new Api({\r\n  baseURL: 'https://api.mestobyleonid.nomoredomains.work',\r\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Leonid\\\\dev\\\\mesto-react\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\Leonid\\\\dev\\\\mesto-react\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var serverUrl=_ref.serverUrl,headers=_ref.headers;_classCallCheck(this,Api);this._url=serverUrl;this._headers=headers;}_createClass(Api,[{key:\"_parseResponse\",value:function _parseResponse(res,errorText){if(res.ok){return res.json();}return Promise.reject(\"\".concat(errorText,\". \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0438:\").concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(this._url+'/users/me',{method:'GET',headers:this._headers}).then(function(res){return _this._parseResponse(res,'Не удалось загрузить данные пользователя');});}},{key:\"getInitialCards\",value:function getInitialCards(){var _this2=this;return fetch(this._url+'/cards',{method:'GET',headers:this._headers}).then(function(res){return _this2._parseResponse(res,'Не удалось загрузить карточки');});}},{key:\"editProfile\",value:function editProfile(_ref2){var _this3=this;var name=_ref2.name,description=_ref2.description;return fetch(this._url+'/users/me',{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:description})}).then(function(res){return _this3._parseResponse(res,'Не удалось загрузить данные профиля');});}},{key:\"updateUserAvatar\",value:function updateUserAvatar(link){var _this4=this;return fetch(this._url+'/users/me/avatar',{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:link})}).then(function(res){return _this4._parseResponse(res,'Не удалось загрузить аватар');});}},{key:\"addCard\",value:function addCard(_ref3){var _this5=this;var name=_ref3.name,link=_ref3.link;return fetch(this._url+'/cards',{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(function(res){return _this5._parseResponse(res,'Не удалось добавить карточку');});}},{key:\"deleteCard\",value:function deleteCard(cardId){var _this6=this;return fetch(this._url+'/cards/'+cardId,{method:'DELETE',headers:this._headers}).then(function(res){return _this6._parseResponse(res,'Не удалось удалить карточку');});}},{key:\"addLike\",value:function addLike(cardId){var _this7=this;return fetch(this._url+'/cards/'+cardId+'/likes/',{method:'PUT',headers:this._headers}).then(function(res){return _this7._parseResponse(res,'Не удалось поставить like');});}},{key:\"removeLike\",value:function removeLike(cardId){var _this8=this;return fetch(this._url+'/cards/'+cardId+'/likes/',{method:'DELETE',headers:this._headers}).then(function(res){return _this8._parseResponse(res,'Не удалось убрать лайк');});}}]);return Api;}();// Экземпляр класса Api\nexport var api=new Api({serverUrl:'https://mesto.nomoreparties.co/v1/cohort-31',headers:{authorization:'c5326610-ed33-45d9-9066-edfd682961dc','Content-Type':'application/json'}});","map":{"version":3,"sources":["C:/Users/Leonid/dev/mesto-react/src/utils/api.js"],"names":["Api","serverUrl","headers","_url","_headers","res","errorText","ok","json","Promise","reject","status","fetch","method","then","_parseResponse","name","description","body","JSON","stringify","about","link","avatar","cardId","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({serverUrl, headers}) {\r\n    this._url = serverUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _parseResponse(res, errorText) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`${errorText}. Статус ошибки:${res.status}`);\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(this._url + '/users/me',{\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось загрузить данные пользователя');\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(this._url + '/cards', {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось загрузить карточки');\r\n    });\r\n  }\r\n\r\n  editProfile({name, description}) {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: description\r\n      })\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось загрузить данные профиля');\r\n    });\r\n  }\r\n\r\n  updateUserAvatar(link) {\r\n    return fetch(this._url + '/users/me/avatar', {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось загрузить аватар');\r\n    });\r\n  }\r\n\r\n  addCard({name, link}) {\r\n    return fetch(this._url + '/cards', {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось добавить карточку');\r\n    });\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(this._url + '/cards/' + cardId, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось удалить карточку');\r\n    });\r\n  }\r\n\r\n  addLike(cardId) {\r\n    return fetch(this._url + '/cards/' + cardId + '/likes/', {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось поставить like');\r\n    });\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(this._url + '/cards/' + cardId + '/likes/', {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then(res => {return this._parseResponse(res, 'Не удалось убрать лайк');\r\n    });\r\n  }\r\n}\r\n\r\n// Экземпляр класса Api\r\nexport const api = new Api ({\r\n  serverUrl: 'https://mesto.nomoreparties.co/v1/cohort-31',\r\n  headers: {\r\n    authorization: 'c5326610-ed33-45d9-9066-edfd682961dc',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}
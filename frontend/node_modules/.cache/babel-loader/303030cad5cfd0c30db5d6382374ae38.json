{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\InfoToolTip.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoToolTip(_ref) {\n  _s();\n\n  let {\n    isSuccess,\n    isOpen,\n    onClose\n  } = _ref;\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${isOpen && 'popup_show'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'popup__window',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'button',\n        className: `popup__close-button`,\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'popup__form popup__form_type_infotooltip',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `popup__entry-icon ${isSuccess ? 'popup__entry-icon_type_ok' : 'popup__entry-icon_type_wrong'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: 'popup__title_type_infotooltip',\n          children: isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoToolTip, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InfoToolTip;\nexport default InfoToolTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoToolTip\");","map":{"version":3,"sources":["C:/Users/stanv/dev/react-mesto-api-full/frontend/src/components/InfoToolTip.js"],"names":["useEffect","InfoToolTip","isSuccess","isOpen","onClose","handleEscClose","e","key","document","addEventListener","removeEventListener"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,WAAT,OAAqD;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAAgC;AAEnDJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,MAAL,EAAa;;AACb,aAASE,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBH,QAAAA,OAAO;AACR;AACF;;AACDI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,cAArC;AACA,WAAO,MAAM;AACXG,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,cAAxC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACF,MAAD,EAASC,OAAT,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAG,SAAQD,MAAM,IAAI,YAAa,EAAhD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAwB,QAAA,SAAS,EAAG,qBAApC;AAA0D,QAAA,OAAO,EAAEC;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAE,0CAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,qBAAoBF,SAAS,GAAG,2BAAH,GAAiC,8BAA+B;AAA9G;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAE,+BAAf;AAAA,oBACGA,SAAS,GAAG,gCAAH,GAAsC;AADlD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhCQD,W;;KAAAA,W;AAkCT,eAAeA,WAAf","sourcesContent":["import { useEffect } from 'react';\r\n\r\nfunction InfoToolTip({ isSuccess, isOpen, onClose }) {\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  return (\r\n    <div className={`popup ${isOpen && 'popup_show'}`}>\r\n      <div className={'popup__window'}>\r\n        <button type={'button'} className={`popup__close-button`} onClick={onClose}>\r\n          { }\r\n        </button>\r\n        <div className={'popup__form popup__form_type_infotooltip'}>\r\n          <div className={`popup__entry-icon ${isSuccess ? 'popup__entry-icon_type_ok' : 'popup__entry-icon_type_wrong'}`}>\r\n            { }\r\n          </div>\r\n          <h2 className={'popup__title_type_infotooltip'}>\r\n            {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default InfoToolTip"]},"metadata":{},"sourceType":"module"}
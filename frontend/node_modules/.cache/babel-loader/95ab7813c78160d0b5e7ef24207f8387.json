{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";import _createClass from\"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl;_classCallCheck(this,Api);this._url=baseUrl;}_createClass(Api,[{key:\"_parseResponse\",value:function _parseResponse(res,errorText){if(res.ok){return res.json();}return Promise.reject(\"\".concat(errorText,\". \\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0438:\").concat(res.status));}},{key:\"getUserInfo\",value:function getUserInfo(jwt){var _this=this;return fetch(this._url+'/users/me',{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this._parseResponse(res,'Не удалось загрузить данные пользователя');});}},{key:\"getInitialCards\",value:function getInitialCards(jwt){var _this2=this;return fetch(this._url+'/cards',{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this2._parseResponse(res,'Не удалось загрузить карточки');});}},{key:\"editProfile\",value:function editProfile(_ref2,jwt){var _this3=this;var name=_ref2.name,description=_ref2.description;return fetch(this._url+'/users/me',{method:'PATCH',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)},body:JSON.stringify({name:name,about:description})}).then(function(res){return _this3._parseResponse(res,'Не удалось загрузить данные профиля');});}},{key:\"updateUserAvatar\",value:function updateUserAvatar(link,jwt){var _this4=this;return fetch(this._url+'/users/me/avatar',{method:\"PATCH\",headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)},body:JSON.stringify({avatar:link})}).then(function(res){return _this4._parseResponse(res,'Не удалось загрузить аватар');});}},{key:\"addCard\",value:function addCard(_ref3,jwt){var _this5=this;var name=_ref3.name,link=_ref3.link;return fetch(this._url+'/cards',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)},body:JSON.stringify({name:name,link:link})}).then(function(res){return _this5._parseResponse(res,'Не удалось добавить карточку');});}},{key:\"deleteCard\",value:function deleteCard(cardId,jwt){var _this6=this;return fetch(this._url+'/cards/'+cardId,{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this6._parseResponse(res,'Не удалось удалить карточку');});}},{key:\"addLike\",value:function addLike(cardId,jwt){var _this7=this;return fetch(this._url+'/cards/'+cardId+'/likes/',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this7._parseResponse(res,'Не удалось поставить like');});}},{key:\"removeLike\",value:function removeLike(cardId,jwt){var _this8=this;return fetch(this._url+'/cards/'+cardId+'/likes/',{method:'DELETE',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(jwt)}}).then(function(res){return _this8._parseResponse(res,'Не удалось убрать лайк');});}}]);return Api;}();// Экземпляр класса Api\nexport var api=new Api({baseUrl:'http://api.mestobyleonid.nomoredomains.work'});","map":{"version":3,"sources":["C:/Users/stanv/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["Api","baseUrl","_url","res","errorText","ok","json","Promise","reject","status","jwt","fetch","method","headers","then","_parseResponse","name","description","body","JSON","stringify","about","link","avatar","cardId","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({ baseUrl }) {\r\n    this._url = baseUrl;\r\n  }\r\n\r\n  _parseResponse(res, errorText) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`${errorText}. Статус ошибки:${res.status}`);\r\n  }\r\n\r\n  getUserInfo(jwt) {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      }})\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось загрузить данные пользователя');\r\n      });\r\n  }\r\n\r\n  getInitialCards(jwt) {\r\n    return fetch(this._url + '/cards', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      }})\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось загрузить карточки');\r\n      });\r\n  }\r\n\r\n  editProfile({ name, description }, jwt) {\r\n    return fetch(this._url + '/users/me', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: description\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось загрузить данные профиля');\r\n      });\r\n  }\r\n\r\n  updateUserAvatar(link, jwt) {\r\n    return fetch(this._url + '/users/me/avatar', {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось загрузить аватар');\r\n      });\r\n  }\r\n\r\n  addCard({ name, link }, jwt) {\r\n    return fetch(this._url + '/cards', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось добавить карточку');\r\n      });\r\n  }\r\n\r\n  deleteCard(cardId, jwt) {\r\n    return fetch(this._url + '/cards/' + cardId, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`},\r\n      })\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось удалить карточку');\r\n      });\r\n  }\r\n\r\n  addLike(cardId, jwt) {\r\n    return fetch(this._url + '/cards/' + cardId + '/likes/', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось поставить like');\r\n      });\r\n  }\r\n\r\n  removeLike(cardId, jwt) {\r\n    return fetch(this._url + '/cards/' + cardId + '/likes/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${jwt}`\r\n      }\r\n    })\r\n      .then(res => {\r\n        return this._parseResponse(res, 'Не удалось убрать лайк');\r\n      });\r\n  }\r\n}\r\n\r\n// Экземпляр класса Api\r\nexport const api = new Api({\r\n  baseUrl: 'http://api.mestobyleonid.nomoredomains.work',\r\n});"]},"metadata":{},"sourceType":"module"}
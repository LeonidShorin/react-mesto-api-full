{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonid\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from './PopupWithForm';\nimport useInput from '../utils/formValidator';\nimport { useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  const isLoading = onLoading;\n  const initialValues = useMemo(() => {\n    return {\n      link: ''\n    };\n  }, []);\n  const avatar = useInput(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar(avatar.values.link);\n  }\n\n  useEffect(() => {\n    !isOpen && avatar.resetForm();\n  }, [isOpen]);\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'avatar',\n    title: 'Обновить аватар',\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isLoading: isLoading,\n    isValid: avatar.isValid,\n    buttonText: 'Сохранить',\n    loadingText: 'Сохранение...',\n    classConditions: `popup__save-button ${showDisabledSubmitButton && 'popup__save-button_disabled'}`,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: 'popup__fieldset',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        className: \"popup__input popup__input_type_avatar\",\n        name: \"link\",\n        ref: avatarRef,\n        onChange: e => {\n          avatar.handleError(e.target);\n        },\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        id: \"avatar-link\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `popup__input-error ${showAvatarError && 'popup__input-error_active'}\n        avatar-link-error`,\n        children: avatar.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"rpXV9OzUsQF3urwH+OjodU1sbRA=\", false, function () {\n  return [useInput];\n});\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["C:/Users/Leonid/dev/react-mesto-auth/src/components/EditAvatarPopup.js"],"names":["PopupWithForm","useInput","useEffect","useMemo","EditAvatarPopup","props","isLoading","onLoading","initialValues","link","avatar","handleSubmit","e","preventDefault","onUpdateAvatar","values","isOpen","resetForm","handleEscClose","key","onClose","document","addEventListener","removeEventListener","isValid","showDisabledSubmitButton","avatarRef","handleError","target","showAvatarError","error"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,OAAjC;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE9B,QAAMC,SAAS,GAAGC,SAAlB;AACA,QAAMC,aAAa,GAAGL,OAAO,CAAC,MAAM;AAClC,WAAO;AAACM,MAAAA,IAAI,EAAE;AAAP,KAAP;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAGA,QAAMC,MAAM,GAAGT,QAAQ,CAACO,aAAD,CAAvB;;AAEA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,cAAc,CAACJ,MAAM,CAACK,MAAP,CAAcN,IAAf,CAAd;AACD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACd,KAACc,MAAD,IAAWN,MAAM,CAACO,SAAP,EAAX;AACD,GAFQ,EAEN,CAACD,MAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAI,CAACc,MAAL,EAAa;;AACb,aAASE,cAAT,CAAwBN,CAAxB,EAA2B;AACzB,UAAIA,CAAC,CAACO,GAAF,KAAU,QAAd,EAAwB;AACtBC,QAAAA,OAAO;AACR;AACF;;AACDC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,cAArC;AACA,WAAO,MAAI;AACTG,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,cAAxC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACF,MAAD,EAASI,OAAT,CAXM,CAAT;AAaA,sBACE,QAAC,aAAD;AAAe,IAAA,IAAI,EAAE,QAArB;AAA+B,IAAA,KAAK,EAAE,iBAAtC;AAAyD,IAAA,MAAM,EAAEJ,MAAjE;AACE,IAAA,OAAO,EAAEI,OADX;AACoB,IAAA,QAAQ,EAAET,YAD9B;AAC4C,IAAA,SAAS,EAAEL,SADvD;AACkE,IAAA,OAAO,EAAEI,MAAM,CAACc,OADlF;AAC2F,IAAA,UAAU,EAAE,WADvG;AACoH,IAAA,WAAW,EAAE,eADjI;AAEE,IAAA,eAAe,EAAG,sBAAsBC,wBAAD,IAA8B,6BAA8B,EAFrG;AAAA,2BAGE;AAAU,MAAA,SAAS,EAAE,iBAArB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,SAAS,EAAC,uCAA5B;AAAoE,QAAA,IAAI,EAAC,MAAzE;AAAgF,QAAA,GAAG,EAAEC,SAArF;AACE,QAAA,QAAQ,EAAGd,CAAD,IAAO;AACfF,UAAAA,MAAM,CAACiB,WAAP,CAAmBf,CAAC,CAACgB,MAArB;AACD,SAHH;AAIE,QAAA,WAAW,EAAC,oGAJd;AAKE,QAAA,EAAE,EAAC,aALL;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAM,QAAA,SAAS,EAAG,sBAAqBC,eAAe,IAAI,2BAA4B;AAC9F,0BADQ;AAAA,kBACqBnB,MAAM,CAACoB;AAD5B;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlDQ1B,e;UAMQH,Q;;;KANRG,e;AAoDT,eAAeA,eAAf","sourcesContent":["import PopupWithForm from './PopupWithForm';\r\nimport useInput from '../utils/formValidator';\r\nimport {useEffect, useMemo} from 'react';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  \r\n  const isLoading = onLoading;\r\n  const initialValues = useMemo(() => {\r\n    return {link: ''}\r\n  }, [])\r\n  const avatar = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar(avatar.values.link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    !isOpen && avatar.resetForm();\r\n  }, [isOpen])\r\n\r\n  useEffect(()=>{\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return ()=>{\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  return (\r\n    <PopupWithForm name={'avatar'} title={'Обновить аватар'} isOpen={isOpen}\r\n      onClose={onClose} onSubmit={handleSubmit} isLoading={isLoading} isValid={avatar.isValid} buttonText={'Сохранить'} loadingText={'Сохранение...'}\r\n      classConditions={`popup__save-button ${(showDisabledSubmitButton) && 'popup__save-button_disabled'}`}>\r\n      <fieldset className={'popup__fieldset'}>\r\n        <input type=\"url\" className=\"popup__input popup__input_type_avatar\" name=\"link\" ref={avatarRef}\r\n          onChange={(e) => {\r\n            avatar.handleError(e.target);\r\n          }}\r\n          placeholder=\"Ссылка на картинку\"\r\n          id=\"avatar-link\"\r\n          required\r\n        />\r\n        <span className={`popup__input-error ${showAvatarError && 'popup__input-error_active'}\r\n        avatar-link-error`}>{avatar.error}\r\n        </span>\r\n\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonid\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport logo from '../images/logo.svg';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Header(_ref) {\n  _s();\n\n  let {\n    isLoggedIn,\n    email,\n    onLogOut\n  } = _ref;\n  const [screenWidth, setScreenWidth] = useState(window.screen.width);\n  const [showNavigation, setShowNavigation] = useState(screenWidth > 580);\n  const location = useLocation();\n\n  function traceScreenWidth() {\n    setScreenWidth(window.screen.width);\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', traceScreenWidth);\n    return () => {\n      window.removeEventListener('resize', traceScreenWidth);\n    };\n  });\n  useEffect(() => {\n    screenWidth < 580 ? setShowNavigation(false) : setShowNavigation(true);\n  }, [screenWidth]);\n\n  function handleNavButtonClick() {\n    setShowNavigation(true);\n  }\n\n  function handleCloseNavButton() {\n    setShowNavigation(false);\n  }\n\n  function NavigationBar(_ref2) {\n    let {\n      columnStyle\n    } = _ref2;\n\n    if (!isLoggedIn && location.pathname === '/sign-up') {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: '/sign-in',\n        className: 'header__link',\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this);\n    } else if (!isLoggedIn && location.pathname === '/sign-in') {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: '/sign-up',\n        replace: true,\n        className: 'header__link',\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: `header__navigation ${columnStyle && 'header__navigation_column'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: 'header__emailtag',\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: 'header__link',\n          to: '/sign-in',\n          onClick: onLogOut,\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  function ShowNavigationBarButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: 'button',\n      className: 'header__navigation-button',\n      onClick: handleNavButtonClick,\n      \"aria-label\": 'Кнопка навигации'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  function CloseNavigationBarButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: 'button',\n      className: 'header__close-navigation-button',\n      onClick: handleCloseNavButton,\n      \"aria-label\": 'Кнопка закрытия окна навигации'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n  function HeaderLayout() {\n    if (!isLoggedIn || isLoggedIn && showNavigation && screenWidth > 580) {\n      return /*#__PURE__*/_jsxDEV(NavigationBar, {\n        columnStyle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this);\n    } else if (isLoggedIn && !showNavigation && screenWidth < 580) {\n      return /*#__PURE__*/_jsxDEV(ShowNavigationBarButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    } else if (isLoggedIn && showNavigation && screenWidth < 580) {\n      return /*#__PURE__*/_jsxDEV(CloseNavigationBarButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(NavigationBar, {\n        columnStyle: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoggedIn && showNavigation && screenWidth < 580 && /*#__PURE__*/_jsxDEV(NavigationBar, {\n      columnStyle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header__logo\",\n        src: logo,\n        alt: \"\\u041C\\u0435\\u0441\\u0442\\u043E \\u0420\\u043E\\u0441\\u0441\\u0438\\u044F \\u043B\\u043E\\u0433\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(HeaderLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Header, \"L46xoyLcoqaE67t+0EK9K1lg6R8=\", false, function () {\n  return [useLocation];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Leonid/dev/react-mesto-auth/src/components/Header.js"],"names":["logo","Link","useLocation","useEffect","useState","Header","isLoggedIn","email","onLogOut","screenWidth","setScreenWidth","window","screen","width","showNavigation","setShowNavigation","location","traceScreenWidth","addEventListener","removeEventListener","handleNavButtonClick","handleCloseNavButton","NavigationBar","columnStyle","pathname","ShowNavigationBarButton","CloseNavigationBarButton","HeaderLayout"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,SAAQC,IAAR,EAAcC,WAAd,QAAgC,kBAAhC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;;AAEA,SAASC,MAAT,OAA+C;AAAA;;AAAA,MAA/B;AAACC,IAAAA,UAAD;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,GAA+B;AAC7C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACO,MAAM,CAACC,MAAP,CAAcC,KAAf,CAA9C;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAACK,WAAW,GAAG,GAAf,CAApD;AACA,QAAMO,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,WAASe,gBAAT,GAA4B;AAC1BP,IAAAA,cAAc,CAACC,MAAM,CAACC,MAAP,CAAcC,KAAf,CAAd;AACD;;AAEDV,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,gBAAlC;AACA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,gBAArC;AACD,KAFD;AAGD,GALQ,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,WAAW,GAAG,GAAf,GAAsBM,iBAAiB,CAAC,KAAD,CAAvC,GAAiDA,iBAAiB,CAAC,IAAD,CAAlE;AACD,GAFQ,EAEN,CAACN,WAAD,CAFM,CAAT;;AAKA,WAASW,oBAAT,GAAgC;AAC9BL,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AAED,WAASM,oBAAT,GAAgC;AAC9BN,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAED,WAASO,aAAT,QAAsC;AAAA,QAAf;AAACC,MAAAA;AAAD,KAAe;;AACpC,QAAI,CAACjB,UAAD,IAAeU,QAAQ,CAACQ,QAAT,KAAsB,UAAzC,EAAqD;AACnD,0BAAQ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,UAAV;AACM,QAAA,SAAS,EAAE,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAID,KALD,MAKO,IAAI,CAAClB,UAAD,IAAeU,QAAQ,CAACQ,QAAT,KAAsB,UAAzC,EAAqD;AAC1D,0BAAQ,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,UAAV;AACM,QAAA,OAAO,MADb;AAEM,QAAA,SAAS,EAAE,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAKD,KANM,MAMA;AACL,0BACE;AAAK,QAAA,SAAS,EAAG,sBAAqBD,WAAW,IAAI,2BAA4B,EAAjF;AAAA,gCACE;AAAM,UAAA,SAAS,EAAE,kBAAjB;AAAA,oBAAsChB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAE,cAAjB;AACM,UAAA,EAAE,EAAE,UADV;AAEM,UAAA,OAAO,EAAEC,QAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AACF;;AAED,WAASiB,uBAAT,GAAmC;AACjC,wBAAQ;AAAQ,MAAA,IAAI,EAAE,QAAd;AACQ,MAAA,SAAS,EAAE,2BADnB;AAEQ,MAAA,OAAO,EAAEL,oBAFjB;AAGQ,oBAAY;AAHpB;AAAA;AAAA;AAAA;AAAA,YAAR;AAID;;AAED,WAASM,wBAAT,GAAoC;AAClC,wBAAQ;AAAQ,MAAA,IAAI,EAAE,QAAd;AACQ,MAAA,SAAS,EAAE,iCADnB;AAEQ,MAAA,OAAO,EAAEL,oBAFjB;AAGQ,oBAAY;AAHpB;AAAA;AAAA;AAAA;AAAA,YAAR;AAID;;AAED,WAASM,YAAT,GAAwB;AACtB,QAAI,CAACrB,UAAD,IAAgBA,UAAU,IAAIQ,cAAd,IAAgCL,WAAW,GAAG,GAAlE,EAAwE;AACtE,0BAAO,QAAC,aAAD;AAAe,QAAA,WAAW,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAIH,UAAU,IAAI,CAACQ,cAAf,IAAiCL,WAAW,GAAG,GAAnD,EAAwD;AAC7D,0BAAO,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA,IAAIH,UAAU,IAAIQ,cAAd,IAAgCL,WAAW,GAAG,GAAlD,EAAuD;AAC5D,0BAAO,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BAAO,QAAC,aAAD;AAAe,QAAA,WAAW,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAED,sBAAQ;AAAA,eACJH,UAAU,IAAIQ,cAAd,IAAgCL,WAAW,GAAG,GAA/C,iBACD,QAAC,aAAD;AAAe,MAAA,WAAW,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFM,eAGN;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,GAAG,EAAET,IAAnC;AAAyC,QAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHM;AAAA,kBAAR;AASD;;GAvFQK,M;UAGUH,W;;;KAHVG,M;AAyFT,eAAeA,MAAf","sourcesContent":["import logo from '../images/logo.svg';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {useEffect, useState} from 'react';\r\n\r\nfunction Header({isLoggedIn, email, onLogOut}) {\r\n  const [screenWidth, setScreenWidth] = useState(window.screen.width);\r\n  const [showNavigation, setShowNavigation] = useState(screenWidth > 580);\r\n  const location = useLocation();\r\n\r\n  function traceScreenWidth() {\r\n    setScreenWidth(window.screen.width);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', traceScreenWidth)\r\n    return () => {\r\n      window.removeEventListener('resize', traceScreenWidth)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    (screenWidth < 580) ? setShowNavigation(false) : setShowNavigation(true);\r\n  }, [screenWidth])\r\n\r\n\r\n  function handleNavButtonClick() {\r\n    setShowNavigation(true);\r\n  }\r\n\r\n  function handleCloseNavButton() {\r\n    setShowNavigation(false)\r\n  }\r\n\r\n  function NavigationBar({columnStyle}) {\r\n    if (!isLoggedIn && location.pathname === '/sign-up') {\r\n      return (<Link to={'/sign-in'}\r\n                    className={'header__link'}>\r\n        Вход\r\n      </Link>)\r\n    } else if (!isLoggedIn && location.pathname === '/sign-in') {\r\n      return (<Link to={'/sign-up'}\r\n                    replace\r\n                    className={'header__link'}>\r\n        Регистрация\r\n      </Link>)\r\n    } else {\r\n      return (\r\n        <nav className={`header__navigation ${columnStyle && 'header__navigation_column'}`}>\r\n          <span className={'header__emailtag'}>{email}</span>\r\n          <Link className={'header__link'}\r\n                to={'/sign-in'}\r\n                onClick={onLogOut}>Выйти</Link>\r\n        </nav>)\r\n    }\r\n  }\r\n\r\n  function ShowNavigationBarButton() {\r\n    return (<button type={'button'}\r\n                    className={'header__navigation-button'}\r\n                    onClick={handleNavButtonClick}\r\n                    aria-label={'Кнопка навигации'}>{}</button>)\r\n  }\r\n\r\n  function CloseNavigationBarButton() {\r\n    return (<button type={'button'}\r\n                    className={'header__close-navigation-button'}\r\n                    onClick={handleCloseNavButton}\r\n                    aria-label={'Кнопка закрытия окна навигации'}>{}</button>)\r\n  }\r\n\r\n  function HeaderLayout() {\r\n    if (!isLoggedIn || (isLoggedIn && showNavigation && screenWidth > 580)) {\r\n      return <NavigationBar columnStyle={false}/>\r\n    } else if (isLoggedIn && !showNavigation && screenWidth < 580) {\r\n      return <ShowNavigationBarButton/>;\r\n    } else if (isLoggedIn && showNavigation && screenWidth < 580) {\r\n      return <CloseNavigationBarButton/>;\r\n    } else {\r\n      return <NavigationBar columnStyle={false}/>\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    {(isLoggedIn && showNavigation && screenWidth < 580) &&\r\n    <NavigationBar columnStyle={true}/>}\r\n    <header className=\"header\">\r\n      <img className=\"header__logo\" src={logo} alt=\"Место Россия лого\" />\r\n      <div className=\"header__line\" />\r\n      <HeaderLayout/>\r\n    </header>\r\n  </>)\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}
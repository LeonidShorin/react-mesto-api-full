{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from './PopupWithForm.js';\nimport useForm from '../utils/useForm';\nimport { useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(_ref) {\n  _s();\n\n  let {\n    onLoading,\n    isOpen,\n    onAddPlace,\n    onClose\n  } = _ref;\n  const initialValues = useMemo(() => {\n    return {\n      name: '',\n      link: ''\n    };\n  }, []);\n  const validation = useForm(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace(validation.values.name, validation.values.link);\n  }\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  useEffect(() => {\n    !isOpen && validation.resetForm();\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'add-card-form',\n    title: 'Новое место',\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isValid: validation.isValid,\n    isLoading: onLoading,\n    defaultTitle: 'Создать',\n    loadingTitle: 'Сохранение...',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'popup__form-fieldset',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"popup__form-item popup__form-item_type_card-description\",\n        name: \"name\",\n        value: validation.values.name,\n        onChange: validation.handleChange,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        id: \"card\",\n        minLength: \"2\",\n        maxLength: \"20\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `popup__input-error card-error\n        popup__input-error_active`,\n        children: validation.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        className: \"popup__form-item popup__form-item_type_image-link\",\n        name: \"link\",\n        value: validation.values.link,\n        onChange: validation.handleChange,\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        id: \"link\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `popup__input-error link-error \n                       popup__input-error_active`,\n        children: validation.errors.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this);\n}\n\n_s(AddPlacePopup, \"MC8P7aQ0YAsholvWWmiRMRD/9f8=\", false, function () {\n  return [useForm];\n});\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/stanv/dev/react-mesto-api-full/frontend/src/components/AddPlacePopup.js"],"names":["PopupWithForm","useForm","useEffect","useMemo","AddPlacePopup","onLoading","isOpen","onAddPlace","onClose","initialValues","name","link","validation","handleSubmit","e","preventDefault","values","handleEscClose","key","document","addEventListener","removeEventListener","resetForm","isValid","handleChange","errors"],"mappings":"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","sourcesContent":["import PopupWithForm from './PopupWithForm.js';\nimport useForm from '../utils/useForm';\nimport { useEffect, useMemo} from 'react';\n\nfunction AddPlacePopup({onLoading, isOpen, onAddPlace, onClose}) {\n  const initialValues = useMemo(() => {\n    return {name: '', link: ''}\n  }, [])\n  const validation = useForm(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace(validation.values.name, validation.values.link);\n  }\n\n  useEffect(()=>{\n    if (!isOpen) return;\n    function handleEscClose(e) {\n        if (e.key === 'Escape') {\n          onClose();\n        }\n    }\n    document.addEventListener('keydown', handleEscClose);\n    return ()=>{\n      document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [isOpen, onClose])\n\n  useEffect(() => {\n    !isOpen && validation.resetForm();\n  }, [isOpen])\n\n\n  return (<PopupWithForm name={'add-card-form'}\n                         title={'Новое место'}\n                         isOpen={isOpen}\n                         onClose={onClose}\n                         onSubmit={handleSubmit}\n                         isValid={validation.isValid}\n                         isLoading={onLoading}\n                         defaultTitle={'Создать'}\n                         loadingTitle={'Сохранение...'}>\n      <div className={'popup__form-fieldset'}>\n        <input type=\"text\"\n               className=\"popup__form-item popup__form-item_type_card-description\"\n               name=\"name\"\n               value={validation.values.name}\n               onChange={validation.handleChange}\n               placeholder=\"Название\"\n               id=\"card\"\n               minLength=\"2\"\n               maxLength=\"20\"\n               required/>\n        <span className={`popup__input-error card-error\n        popup__input-error_active`}>{validation.errors.name}</span>\n        <input type=\"url\"\n               className=\"popup__form-item popup__form-item_type_image-link\"\n               name=\"link\"\n               value={validation.values.link}\n               onChange={validation.handleChange}\n               placeholder=\"Ссылка на картинку\"\n               id=\"link\"\n               required/>\n        <span className={`popup__input-error link-error \n                       popup__input-error_active`}>{validation.errors.link}</span>\n      </div>\n    </PopupWithForm>)\n}\n\nexport default AddPlacePopup"]},"metadata":{},"sourceType":"module"}
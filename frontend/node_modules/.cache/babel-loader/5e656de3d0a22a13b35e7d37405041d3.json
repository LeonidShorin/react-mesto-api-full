{"ast":null,"code":"import{useEffect,useRef}from'react';import PopupWithForm from'./PopupWithForm';import useInput from'../utils/formValidator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditAvatarPopup(props){var avatarRef=useRef();var isOpen=props.isOpen;var isLoading=props.onLoading;var avatar=useInput('',isOpen);var showAvatarError=!avatar.isCorrect&&avatar.error;var showDisabledSubmitButton=avatar.disabledSubmitButton||isLoading;function handleSubmit(e){e.preventDefault();props.onUpdateAvatar(avatarRef.current.value);}useEffect(function(){!isOpen&&(avatarRef.current.value='');},[isOpen]);return/*#__PURE__*/_jsx(PopupWithForm,{name:'avatar',title:'Обновить аватар',isOpen:props.isOpen,onClose:props.onClose,onSubmit:handleSubmit,onLoading:props.onLoading,buttonText:'Сохранить',loadingText:'Сохранение...',classConditions:\"popup__save-button \".concat(showDisabledSubmitButton&&'popup__save-button_disabled'),children:/*#__PURE__*/_jsxs(\"fieldset\",{className:'popup__fieldset',children:[/*#__PURE__*/_jsx(\"input\",{type:\"url\",className:\"popup__input popup__input_type_avatar\",name:\"link\",ref:avatarRef,onChange:function onChange(e){avatar.handleError(e.target);},placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",id:\"avatar-link\",required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"popup__input-error \".concat(showAvatarError&&'popup__input-error_active',\"\\n        avatar-link-error\"),children:avatar.error})]})});}export default EditAvatarPopup;","map":{"version":3,"sources":["C:/Users/Leonid/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["useEffect","useRef","PopupWithForm","useInput","EditAvatarPopup","props","avatarRef","isOpen","isLoading","onLoading","avatar","showAvatarError","isCorrect","error","showDisabledSubmitButton","disabledSubmitButton","handleSubmit","e","preventDefault","onUpdateAvatar","current","value","onClose","handleError","target"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,C,wFAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,GAAMC,CAAAA,SAAS,CAAGL,MAAM,EAAxB,CACA,GAAMM,CAAAA,MAAM,CAAGF,KAAK,CAACE,MAArB,CACA,GAAMC,CAAAA,SAAS,CAAGH,KAAK,CAACI,SAAxB,CACA,GAAMC,CAAAA,MAAM,CAAGP,QAAQ,CAAC,EAAD,CAAKI,MAAL,CAAvB,CACA,GAAMI,CAAAA,eAAe,CAAG,CAACD,MAAM,CAACE,SAAR,EAAqBF,MAAM,CAACG,KAApD,CACA,GAAMC,CAAAA,wBAAwB,CAAGJ,MAAM,CAACK,oBAAP,EAA+BP,SAAhE,CAEA,QAASQ,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACvBA,CAAC,CAACC,cAAF,GACAb,KAAK,CAACc,cAAN,CAAqBb,SAAS,CAACc,OAAV,CAAkBC,KAAvC,EACD,CAEDrB,SAAS,CAAC,UAAM,CACd,CAACO,MAAD,GAAYD,SAAS,CAACc,OAAV,CAAkBC,KAAlB,CAA0B,EAAtC,EACD,CAFQ,CAEN,CAACd,MAAD,CAFM,CAAT,CAIA,mBACE,KAAC,aAAD,EAAe,IAAI,CAAE,QAArB,CAA+B,KAAK,CAAE,iBAAtC,CAAyD,MAAM,CAAEF,KAAK,CAACE,MAAvE,CACE,OAAO,CAAEF,KAAK,CAACiB,OADjB,CAC0B,QAAQ,CAAEN,YADpC,CACkD,SAAS,CAAEX,KAAK,CAACI,SADnE,CAC8E,UAAU,CAAE,WAD1F,CACuG,WAAW,CAAE,eADpH,CAEE,eAAe,8BAAyBK,wBAAD,EAA8B,6BAAtD,CAFjB,uBAGE,kBAAU,SAAS,CAAE,iBAArB,wBACE,cAAO,IAAI,CAAC,KAAZ,CAAkB,SAAS,CAAC,uCAA5B,CAAoE,IAAI,CAAC,MAAzE,CAAgF,GAAG,CAAER,SAArF,CACE,QAAQ,CAAE,kBAACW,CAAD,CAAO,CACfP,MAAM,CAACa,WAAP,CAAmBN,CAAC,CAACO,MAArB,EACD,CAHH,CAIE,WAAW,CAAC,oGAJd,CAKE,EAAE,CAAC,aALL,CAME,QAAQ,KANV,EADF,cASE,aAAM,SAAS,8BAAwBb,eAAe,EAAI,2BAA3C,+BAAf,UACqBD,MAAM,CAACG,KAD5B,EATF,GAHF,EADF,CAoBD,CAED,cAAeT,CAAAA,eAAf","sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport useInput from '../utils/formValidator';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarRef = useRef();\r\n  const isOpen = props.isOpen;\r\n  const isLoading = props.onLoading;\r\n  const avatar = useInput('', isOpen);\r\n  const showAvatarError = !avatar.isCorrect && avatar.error;\r\n  const showDisabledSubmitButton = avatar.disabledSubmitButton || isLoading;\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.onUpdateAvatar(avatarRef.current.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    !isOpen && (avatarRef.current.value = '')\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm name={'avatar'} title={'Обновить аватар'} isOpen={props.isOpen}\r\n      onClose={props.onClose} onSubmit={handleSubmit} onLoading={props.onLoading} buttonText={'Сохранить'} loadingText={'Сохранение...'}\r\n      classConditions={`popup__save-button ${(showDisabledSubmitButton) && 'popup__save-button_disabled'}`}>\r\n      <fieldset className={'popup__fieldset'}>\r\n        <input type=\"url\" className=\"popup__input popup__input_type_avatar\" name=\"link\" ref={avatarRef}\r\n          onChange={(e) => {\r\n            avatar.handleError(e.target);\r\n          }}\r\n          placeholder=\"Ссылка на картинку\"\r\n          id=\"avatar-link\"\r\n          required\r\n        />\r\n        <span className={`popup__input-error ${showAvatarError && 'popup__input-error_active'}\r\n        avatar-link-error`}>{avatar.error}\r\n        </span>\r\n\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}
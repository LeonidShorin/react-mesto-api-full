{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonid\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from './PopupWithForm.js';\nimport useInput from '../utils/formValidator.js';\nimport { useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(_ref) {\n  _s();\n\n  let {\n    onLoading,\n    isOpen,\n    onAddPlace,\n    onClose\n  } = _ref;\n  const initialValues = useMemo(() => {\n    return {\n      name: '',\n      link: ''\n    };\n  }, []);\n  const validation = useInput(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace(validation.values.name, validation.values.link);\n  }\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  useEffect(() => {\n    !isOpen && validation.resetForm();\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'card',\n    title: 'Новое место',\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isValid: validation.isValid,\n    isLoading: onLoading,\n    buttonText: 'Создать',\n    loadingText: 'Сохранение...',\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: 'popup__fieldset',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"popup__input popup__input_type_card\",\n        name: \"name\",\n        value: validation.values.name,\n        onChange: validation.handleChange,\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        id: \"card\",\n        minLength: \"2\",\n        maxLength: \"20\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `popup__input-error card-error popup__input-error_active`,\n        children: validation.errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        className: \"popup__input popup__input_type_link\",\n        name: \"link\",\n        value: validation.values.link,\n        onChange: validation.handleChange,\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        id: \"link\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `popup__input-error link-error popup__input-error_active`,\n        children: validation.errors.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"4ElxesR53hGqrhNVlIt9yGBcN+A=\", false, function () {\n  return [useInput];\n});\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/Leonid/dev/react-mesto-auth/src/components/AddPlacePopup.js"],"names":["PopupWithForm","useInput","useEffect","useMemo","AddPlacePopup","onLoading","isOpen","onAddPlace","onClose","initialValues","name","link","validation","handleSubmit","e","preventDefault","values","handleEscClose","key","document","addEventListener","removeEventListener","resetForm","isValid","handleChange","errors"],"mappings":"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","sourcesContent":["import PopupWithForm from './PopupWithForm.js';\r\nimport useInput from '../utils/formValidator.js';\r\nimport { useEffect, useMemo } from 'react';\r\n\r\nfunction AddPlacePopup({ onLoading, isOpen, onAddPlace, onClose }) {\r\n  const initialValues = useMemo(() => {\r\n    return { name: '', link: '' }\r\n  }, [])\r\n  const validation = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(validation.values.name, validation.values.link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  useEffect(() => {\r\n    !isOpen && validation.resetForm();\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm name={'card'} title={'Новое место'} isOpen={isOpen}\r\n      onClose={onClose} onSubmit={handleSubmit} isValid={validation.isValid} isLoading={onLoading} buttonText={'Создать'} loadingText={'Сохранение...'}\r\n    >\r\n      <fieldset className={'popup__fieldset'}>\r\n        <input type=\"text\" className=\"popup__input popup__input_type_card\" name=\"name\" value={validation.values.name}\r\n          onChange={validation.handleChange} placeholder=\"Название\" id=\"card\" minLength=\"2\" maxLength=\"20\" required\r\n        />\r\n        <span className={`popup__input-error card-error popup__input-error_active`}>\r\n          {validation.errors.name}\r\n        </span>\r\n        <input type=\"url\" className=\"popup__input popup__input_type_link\" name=\"link\" value={validation.values.link} onChange={validation.handleChange}\r\n          placeholder=\"Ссылка на картинку\" id=\"link\" required\r\n        />\r\n        <span className={`popup__input-error link-error popup__input-error_active`}>\r\n          {validation.errors.link}\r\n        </span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}
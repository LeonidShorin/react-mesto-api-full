{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonid\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from './PopupWithForm.js';\nimport useInput from '../utils/formValidator.js';\nimport { useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  const initialValues = useMemo(() => {\n    return {\n      name: '',\n      link: ''\n    };\n  }, []);\n  const validation = useInput(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace(validation.values.name, validation.values.link);\n  }\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  useEffect(() => {\n    !isOpen && validation.resetForm();\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'card',\n    title: 'Новое место',\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isValid: validation.isValid,\n    isLoading: onLoading,\n    buttonText: 'Создать',\n    loadingText: 'Сохранение...',\n    classConditions: `popup__save-button ${showDisabledSubmitButton && 'popup__save-button_disabled'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"popup__input popup__input_type_card-name\",\n      name: \"name\",\n      value: validation.values.name,\n      onChange: validation.handleChange,\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      id: \"card\",\n      minLength: \"2\",\n      maxLength: \"20\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `popup__input-error card-error popup__input-error_active`,\n      children: validation.errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: \"popup__input popup__input_type_link\",\n      name: \"link\",\n      value: cardLink.value,\n      onChange: cardLink.handleChange,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      id: \"link\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `popup__input-error link-error ${showCardLinkError && 'popup__input-error_active'}`,\n      children: cardLink.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"4ElxesR53hGqrhNVlIt9yGBcN+A=\", false, function () {\n  return [useInput];\n});\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["C:/Users/Leonid/dev/react-mesto-auth/src/components/AddPlacePopup.js"],"names":["PopupWithForm","useInput","useEffect","useMemo","AddPlacePopup","props","initialValues","name","link","validation","handleSubmit","e","preventDefault","onAddPlace","values","isOpen","handleEscClose","key","onClose","document","addEventListener","removeEventListener","resetForm","isValid","onLoading","showDisabledSubmitButton","handleChange","errors","cardLink","value","showCardLinkError","error"],"mappings":"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","sourcesContent":["import PopupWithForm from './PopupWithForm.js';\r\nimport useInput from '../utils/formValidator.js';\r\nimport { useEffect, useMemo} from 'react';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const initialValues = useMemo(() => {\r\n    return {name: '', link: ''}\r\n  }, [])\r\n  const validation = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(validation.values.name, validation.values.link);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n        if (e.key === 'Escape') {\r\n          onClose();\r\n        }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return ()=>{\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  useEffect(() => {\r\n    !isOpen && validation.resetForm();\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm name={'card'} title={'Новое место'} isOpen={isOpen}\r\n      onClose={onClose} onSubmit={handleSubmit} isValid={validation.isValid} isLoading={onLoading} buttonText={'Создать'} loadingText={'Сохранение...'}\r\n      classConditions={`popup__save-button ${showDisabledSubmitButton && 'popup__save-button_disabled'}`}>\r\n      <input type=\"text\" className=\"popup__input popup__input_type_card-name\" name=\"name\" value={validation.values.name}\r\n        onChange={validation.handleChange} placeholder=\"Название\" id=\"card\" minLength=\"2\" maxLength=\"20\" required\r\n      />\r\n      <span className={`popup__input-error card-error popup__input-error_active`}>\r\n        {validation.errors.name}\r\n      </span>\r\n      <input type=\"url\" className=\"popup__input popup__input_type_link\" name=\"link\" value={cardLink.value} onChange={cardLink.handleChange}\r\n        placeholder=\"Ссылка на картинку\" id=\"link\" required\r\n      />\r\n      <span className={`popup__input-error link-error ${showCardLinkError && 'popup__input-error_active'}`}>\r\n        {cardLink.error}\r\n      </span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;"]},"metadata":{},"sourceType":"module"}
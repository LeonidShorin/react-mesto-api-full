{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport PopupWithForm from './PopupWithForm';\nimport useForm from '../utils/useForm';\nimport { useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(_ref) {\n  _s();\n\n  let {\n    onLoading,\n    isOpen,\n    onUpdateAvatar,\n    onClose\n  } = _ref;\n  const isLoading = onLoading;\n  const initialValues = useMemo(() => {\n    return {\n      link: ''\n    };\n  }, []);\n  const avatar = useForm(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar(avatar.values.link);\n  }\n\n  useEffect(() => {\n    !isOpen && avatar.resetForm();\n  }, [isOpen]);\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'update-avatar-form',\n    title: 'Обновить аватар',\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    isLoading: isLoading,\n    isValid: avatar.isValid,\n    defaultTitle: 'Сохранить',\n    loadingTitle: 'Сохранение...',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'popup__form-fieldset',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        className: \"popup__form-item popup__form-item_type_avatar-link\",\n        name: \"link\",\n        onChange: avatar.handleChange,\n        value: avatar.values.link,\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        id: \"avatar-link\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `popup__input-error popup__input-error_active\n         avatar-link-error`,\n        children: avatar.errors.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this);\n}\n\n_s(EditAvatarPopup, \"tANWV0llKqADdw0SmcTtZM1rC8Q=\", false, function () {\n  return [useForm];\n});\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["C:/Users/stanv/dev/react-mesto-api-full/frontend/src/components/EditAvatarPopup.js"],"names":["PopupWithForm","useForm","useEffect","useMemo","EditAvatarPopup","onLoading","isOpen","onUpdateAvatar","onClose","isLoading","initialValues","link","avatar","handleSubmit","e","preventDefault","values","resetForm","handleEscClose","key","document","addEventListener","removeEventListener","isValid","handleChange","errors"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,OAAjC;;;AAEA,SAASC,eAAT,OAAuE;AAAA;;AAAA,MAA9C;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA;AAApC,GAA8C;AACrE,QAAMC,SAAS,GAAGJ,SAAlB;AACA,QAAMK,aAAa,GAAGP,OAAO,CAAC,MAAM;AAClC,WAAO;AAACQ,MAAAA,IAAI,EAAE;AAAP,KAAP;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAGA,QAAMC,MAAM,GAAGX,OAAO,CAACS,aAAD,CAAtB;;AAEA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,cAAc,CAACK,MAAM,CAACI,MAAP,CAAcL,IAAf,CAAd;AACD;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACd,KAACI,MAAD,IAAWM,MAAM,CAACK,SAAP,EAAX;AACD,GAFQ,EAEN,CAACX,MAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAI,CAACI,MAAL,EAAa;;AACb,aAASY,cAAT,CAAwBJ,CAAxB,EAA2B;AACzB,UAAIA,CAAC,CAACK,GAAF,KAAU,QAAd,EAAwB;AACtBX,QAAAA,OAAO;AACR;AACF;;AACDY,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,cAArC;AACA,WAAO,MAAI;AACTE,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,cAAxC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACZ,MAAD,EAASE,OAAT,CAXM,CAAT;AAaA,sBAAQ,QAAC,aAAD;AAAe,IAAA,IAAI,EAAE,oBAArB;AACe,IAAA,KAAK,EAAE,iBADtB;AAEe,IAAA,MAAM,EAAEF,MAFvB;AAGe,IAAA,OAAO,EAAEE,OAHxB;AAIe,IAAA,QAAQ,EAAEK,YAJzB;AAKe,IAAA,SAAS,EAAEJ,SAL1B;AAMe,IAAA,OAAO,EAAEG,MAAM,CAACW,OAN/B;AAOe,IAAA,YAAY,EAAE,WAP7B;AAQe,IAAA,YAAY,EAAE,eAR7B;AAAA,2BASN;AAAK,MAAA,SAAS,EAAE,sBAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,KAAZ;AACO,QAAA,SAAS,EAAC,oDADjB;AAEO,QAAA,IAAI,EAAC,MAFZ;AAGO,QAAA,QAAQ,EAAEX,MAAM,CAACY,YAHxB;AAIO,QAAA,KAAK,EAAEZ,MAAM,CAACI,MAAP,CAAcL,IAJ5B;AAKO,QAAA,WAAW,EAAC,oGALnB;AAMO,QAAA,EAAE,EAAC,aANV;AAOO,QAAA,QAAQ;AAPf;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAM,QAAA,SAAS,EAAG;AACxB,2BADM;AAAA,kBACwBC,MAAM,CAACa,MAAP,CAAcd;AADtC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AATM;AAAA;AAAA;AAAA;AAAA,UAAR;AAsBD;;GAnDQP,e;UAKQH,O;;;KALRG,e;AAqDT,eAAeA,eAAf","sourcesContent":["import PopupWithForm from './PopupWithForm';\nimport useForm from '../utils/useForm';\nimport {useEffect, useMemo} from 'react';\n\nfunction EditAvatarPopup({onLoading, isOpen, onUpdateAvatar, onClose}) {\n  const isLoading = onLoading;\n  const initialValues = useMemo(() => {\n    return {link: ''}\n  }, [])\n  const avatar = useForm(initialValues);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar(avatar.values.link);\n  }\n\n  useEffect(() => {\n    !isOpen && avatar.resetForm();\n  }, [isOpen])\n\n  useEffect(()=>{\n    if (!isOpen) return;\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n    document.addEventListener('keydown', handleEscClose);\n    return ()=>{\n      document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [isOpen, onClose])\n\n  return (<PopupWithForm name={'update-avatar-form'}\n                         title={'Обновить аватар'}\n                         isOpen={isOpen}\n                         onClose={onClose}\n                         onSubmit={handleSubmit}\n                         isLoading={isLoading}\n                         isValid={avatar.isValid}\n                         defaultTitle={'Сохранить'}\n                         loadingTitle={'Сохранение...'}>\n    <div className={'popup__form-fieldset'}>\n      <input type=\"url\"\n             className=\"popup__form-item popup__form-item_type_avatar-link\"\n             name=\"link\"\n             onChange={avatar.handleChange}\n             value={avatar.values.link}\n             placeholder=\"Ссылка на картинку\"\n             id=\"avatar-link\"\n             required/>\n      <span className={`popup__input-error popup__input-error_active\n         avatar-link-error`}>{avatar.errors.link}</span>\n    </div>\n  </PopupWithForm>)\n}\n\nexport default EditAvatarPopup"]},"metadata":{},"sourceType":"module"}
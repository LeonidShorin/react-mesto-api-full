{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonid\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport { useEffect, useState } from 'react';\nimport ImagePopup from './ImagePopup.js';\nimport { api } from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmPopup from './ConfirmPopup';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport * as authApi from '../utils/authApi';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\nimport NotFound from './NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedCard, setDeletedCard] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isRegisterSuccessful, setRegisterSuccessful] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const navigate = useNavigate();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (!jwt) {\n      return;\n    }\n\n    authApi.verifyUser(jwt).then(data => {\n      setEmail(data.data.email);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n        let [user, cards] = _ref;\n        setCurrentUser(user);\n        setCards(cards);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    isLoggedIn ? navigate('/react-mesto-auth') : navigate('/sign-in');\n  }, [isLoggedIn]);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsInfoToolTipOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard(null);\n    setDeletedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(name, description) {\n    setIsLoading(true);\n    api.editProfile({\n      name,\n      description\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api.updateAvatar(avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api.addLike(card._id).then(newCard => {\n        setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.removeLike(card._id).then(newCard => {\n        setCards(cards => cards.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleCardDeleteSubmit(card) {\n    setIsLoading(true);\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => {\n        return cards.filter(c => {\n          return c._id !== card._id;\n        });\n      });\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function handleAddPlaceSubmit(name, link) {\n    setIsLoading(true);\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function handleConfirmCardDelete(card) {\n    setIsConfirmDeletePopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  function onLogin(password, email) {\n    setIsLoading(true);\n    authApi.signIn(password, email).then(data => {\n      const jwt = data.token;\n      localStorage.setItem('jwt', jwt);\n      setIsLoggedIn(true);\n      setEmail(email);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function onRegister(password, email) {\n    setIsLoading(true);\n    authApi.signUp(password, email).then(data => {\n      setEmail(data.data.email);\n      setIsInfoToolTipOpen(true);\n      setRegisterSuccessful(true);\n      setIsLoggedIn(true);\n    }).catch(err => {\n      console.log(err);\n      setIsInfoToolTipOpen(true);\n      setRegisterSuccessful(false);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  function onLogOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n  }\n\n  function closeInfoToolTip() {\n    closeAllPopups();\n    isRegisterSuccessful ? navigate('/react-mesto-auth') : navigate('/sign-up');\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      email: email || '',\n      onLogOut: onLogOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: '/react-mesto-auth',\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isLoggedIn: isLoggedIn,\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleConfirmCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/sign-up',\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          isLoading: isLoading,\n          onRegister: onRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }, this),\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/sign-in',\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: onLogin,\n          isLoggedIn: isLoggedIn,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '*',\n        element: /*#__PURE__*/_jsxDEV(NotFound, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser,\n      onLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar,\n      onLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit,\n      onLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmPopup, {\n      isOpen: isConfirmDeletePopupOpen,\n      onClose: closeAllPopups,\n      onLoading: isLoading,\n      card: deletedCard,\n      onSubmit: handleCardDeleteSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      isOpen: isImagePopupOpen,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n      isSuccess: isRegisterSuccessful,\n      isOpen: isInfoToolTipOpen,\n      onClose: closeInfoToolTip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"Hyr/ecMMOsi1RcpkeKDb76ZYo7Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Leonid/dev/react-mesto-auth/src/components/App.js"],"names":["Header","Main","Footer","useEffect","useState","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmPopup","Route","Routes","useNavigate","authApi","Register","Login","ProtectedRoute","InfoToolTip","NotFound","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","isLoading","setIsLoading","deletedCard","setDeletedCard","isLoggedIn","setIsLoggedIn","email","setEmail","isRegisterSuccessful","setRegisterSuccessful","isInfoToolTipOpen","setIsInfoToolTipOpen","navigate","tokenCheck","jwt","localStorage","getItem","verifyUser","then","data","catch","err","console","log","Promise","all","getUserInfo","getInitialCards","user","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleCardClick","card","handleUpdateUser","name","description","editProfile","res","finally","handleUpdateAvatar","avatar","updateAvatar","handleCardLike","isLiked","likes","some","i","_id","addLike","newCard","map","c","removeLike","handleCardDeleteSubmit","deleteCard","filter","handleAddPlaceSubmit","link","addCard","handleConfirmCardDelete","onLogin","password","signIn","token","setItem","onRegister","signUp","onLogOut","removeItem","closeInfoToolTip"],"mappings":"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","sourcesContent":["import Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport {useEffect, useState} from 'react';\nimport ImagePopup from './ImagePopup.js';\nimport {api} from '../utils/api.js';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmPopup from './ConfirmPopup';\nimport {Route, Routes, useNavigate} from 'react-router-dom';\nimport * as authApi from '../utils/authApi'\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\nimport NotFound from './NotFound';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen ] = useState(false)\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedCard, setDeletedCard] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isRegisterSuccessful, setRegisterSuccessful] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const navigate = useNavigate();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (!jwt) {\n      return\n    }\n    authApi.verifyUser(jwt)\n      .then((data) => {\n        setEmail(data.data.email);\n        setIsLoggedIn(true)\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()])\n        .then(([user, cards]) => {\n          setCurrentUser(user);\n          setCards(cards);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [isLoggedIn])\n\n  useEffect(() => {\n    isLoggedIn ? navigate('/react-mesto-auth') : navigate('/sign-in');\n  }, [isLoggedIn])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setIsInfoToolTipOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard(null);\n    setDeletedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(name, description) {\n    setIsLoading(true);\n    api.editProfile({name, description})\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api.updateAvatar(avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {\n          console.log(err)\n        });\n    } else {\n      api.removeLike(card._id)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n  }\n\n  function handleCardDeleteSubmit(card) {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((cards) => {\n          return cards.filter(c => {\n            return c._id !== card._id\n          });\n        });\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleAddPlaceSubmit(name, link) {\n    setIsLoading(true);\n    api.addCard({name, link})\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleConfirmCardDelete(card) {\n    setIsConfirmDeletePopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  function onLogin(password, email) {\n    setIsLoading(true);\n    authApi.signIn(password, email)\n      .then((data) => {\n        const jwt = data.token;\n        localStorage.setItem('jwt', jwt);\n        setIsLoggedIn(true);\n        setEmail(email);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function onRegister(password, email) {\n    setIsLoading(true);\n    authApi.signUp(password, email)\n      .then((data) => {\n        setEmail(data.data.email);\n        setIsInfoToolTipOpen(true);\n        setRegisterSuccessful(true);\n        setIsLoggedIn(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInfoToolTipOpen(true);\n        setRegisterSuccessful(false);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function onLogOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n  }\n\n  function closeInfoToolTip() {\n    closeAllPopups();\n    isRegisterSuccessful ? navigate('/react-mesto-auth') : navigate('/sign-up');\n  }\n\n  return (<CurrentUserContext.Provider value={currentUser}>\n    <Header isLoggedIn={isLoggedIn}\n            email={email || ''}\n            onLogOut={onLogOut}/>\n    <Routes>\n      <Route path={'/react-mesto-auth'}\n             element={<ProtectedRoute isLoggedIn={isLoggedIn}>\n               <Main onEditProfile={handleEditProfileClick}\n                     onAddPlace={handleAddPlaceClick}\n                     onEditAvatar={handleEditAvatarClick}\n                     onCardClick={handleCardClick}\n                     cards={cards}\n                     onCardLike={handleCardLike}\n                     onCardDelete={handleConfirmCardDelete}/>\n             </ProtectedRoute>}/>\n      <Route path={'/sign-up'}\n             element={<Register isLoading={isLoading}\n                                onRegister={onRegister}/>}\n             isLoggedIn={isLoggedIn}/>\n      <Route path={'/sign-in'}\n             element={<Login onLogin={onLogin}\n                             isLoggedIn={isLoggedIn}\n                             isLoading={isLoading}/>}/>\n      <Route path={'*'}\n             element={<NotFound isLoggedIn={isLoggedIn}/>}/>\n    </Routes>\n    <Footer/>\n    <EditProfilePopup isOpen={isEditProfilePopupOpen}\n                      onClose={closeAllPopups}\n                      onUpdateUser={handleUpdateUser}\n                      onLoading={isLoading}/>\n    <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n                     onClose={closeAllPopups}\n                     onUpdateAvatar={handleUpdateAvatar}\n                     onLoading={isLoading}/>\n    <AddPlacePopup isOpen={isAddPlacePopupOpen}\n                   onClose={closeAllPopups}\n                   onAddPlace={handleAddPlaceSubmit}\n                   onLoading={isLoading}/>\n    <ConfirmPopup isOpen={isConfirmDeletePopupOpen}\n                        onClose={closeAllPopups}\n                        onLoading={isLoading}\n                        card={deletedCard}\n                        onSubmit={handleCardDeleteSubmit}/>\n    <ImagePopup card={selectedCard}\n                isOpen={isImagePopupOpen}\n                onClose={closeAllPopups}/>\n    <InfoToolTip isSuccess={isRegisterSuccessful}\n                 isOpen={isInfoToolTipOpen}\n                 onClose={closeInfoToolTip}/>\n  </CurrentUserContext.Provider>)\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}
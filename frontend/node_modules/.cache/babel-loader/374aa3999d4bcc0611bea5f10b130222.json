{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stanv\\\\dev\\\\react-mesto-api-full\\\\frontend\\\\src\\\\components\\\\InfoToolTip.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoToolTip(_ref) {\n  _s();\n\n  let {\n    isSuccess,\n    isOpen,\n    onClose\n  } = _ref;\n  useEffect(() => {\n    if (!isOpen) return;\n\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEscClose);\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    };\n  }, [isOpen, onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${isOpen && 'popup_opened'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'popup__container',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'button',\n        className: `popup__close-button`,\n        onClick: onClose,\n        \"aria-label\": 'Кнопка закрытия модального окна'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'popup__form popup__form_type_infotooltip',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `popup__form-icon \n          ${isSuccess ? 'popup__form-icon_type_success' : 'popup__form-icon_type_fail'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: 'popup__form-heading popup__form-heading_type_infotooltip',\n          children: isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, this);\n}\n\n_s(InfoToolTip, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InfoToolTip;\nexport default InfoToolTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoToolTip\");","map":{"version":3,"sources":["C:/Users/stanv/dev/react-mesto-api-full/frontend/src/components/InfoToolTip.js"],"names":["useEffect","InfoToolTip","isSuccess","isOpen","onClose","handleEscClose","e","key","document","addEventListener","removeEventListener"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;;AAEA,SAASC,WAAT,OAAmD;AAAA;;AAAA,MAA9B;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAA8B;AAEjDJ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAI,CAACG,MAAL,EAAa;;AACb,aAASE,cAAT,CAAwBC,CAAxB,EAA2B;AACzB,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBH,QAAAA,OAAO;AACR;AACF;;AACDI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,cAArC;AACA,WAAO,MAAI;AACTG,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,cAAxC;AACD,KAFD;AAGD,GAXQ,EAWN,CAACF,MAAD,EAASC,OAAT,CAXM,CAAT;AAaA,sBAAQ;AAAK,IAAA,SAAS,EAAG,SAAQD,MAAM,IAAI,cAAe,EAAlD;AAAA,2BACJ;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAE,QAAd;AACQ,QAAA,SAAS,EAAG,qBADpB;AAEQ,QAAA,OAAO,EAAEC,OAFjB;AAGQ,sBAAY;AAHpB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAE,0CAAhB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG;AAC3B,YAAYF,SAAS,GAAG,+BAAH,GAAqC,4BAA6B;AAD7E;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAI,UAAA,SAAS,EAAE,0DAAf;AAAA,oBACGA,SAAS,GAAG,gCAAH,GAAsC;AADlD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAeD;;GA9BQD,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["import {useEffect} from 'react';\n\nfunction InfoToolTip({isSuccess, isOpen, onClose}) {\n\n  useEffect(()=>{\n    if (!isOpen) return;\n    function handleEscClose(e) {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    }\n    document.addEventListener('keydown', handleEscClose);\n    return ()=>{\n      document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [isOpen, onClose])\n\n  return (<div className={`popup ${isOpen && 'popup_opened'}`}>\n      <div className={'popup__container'}>\n        <button type={'button'}\n                className={`popup__close-button`}\n                onClick={onClose}\n                aria-label={'Кнопка закрытия модального окна'}>{}</button>\n        <div className={'popup__form popup__form_type_infotooltip'}>\n          <div className={`popup__form-icon \n          ${isSuccess ? 'popup__form-icon_type_success' : 'popup__form-icon_type_fail'}`}>{}</div>\n          <h2 className={'popup__form-heading popup__form-heading_type_infotooltip'}>\n            {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</h2>\n        </div>\n      </div>\n    </div>)\n\n}\n\nexport default InfoToolTip"]},"metadata":{},"sourceType":"module"}
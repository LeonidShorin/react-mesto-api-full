[{"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\index.js":"1","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\reportWebVitals.js":"2","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\App.js":"3","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Header.js":"4","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Main.js":"5","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js":"6","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js":"7","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Footer.js":"8","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js":"9","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js":"10","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"11","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\NotFound.js":"12","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\InfoToolTip.js":"13","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\ConfirmPopup.js":"14","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Register.js":"15","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"16","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Login.js":"17","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\MenuMobile.js":"18","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\utils\\api.js":"19","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\utils\\authApi.js":"20","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Card.js":"21","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js":"22","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\utils\\formValidator.js":"23","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"24","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\reportWebVitals.js":"25","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"26","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"27","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"28","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"29","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"30","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"31","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"32","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoToolTip.js":"33","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"34","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\NotFound.js":"35","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"36","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"37","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"38","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"39","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js":"40","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\utils\\authApi.js":"41","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"42","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js":"43","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\ConfirmPopup.js":"44","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\MenuMobile.js":"45","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\utils\\formValidator.js":"46"},{"size":394,"mtime":1644487850755,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1642638282065,"results":"49","hashOfConfig":"48"},{"size":9035,"mtime":1644589964235,"results":"50","hashOfConfig":"48"},{"size":1185,"mtime":1644622088111,"results":"51","hashOfConfig":"48"},{"size":1228,"mtime":1644529542187,"results":"52","hashOfConfig":"48"},{"size":2401,"mtime":1644622303947,"results":"53","hashOfConfig":"48"},{"size":1196,"mtime":1644622343072,"results":"54","hashOfConfig":"48"},{"size":178,"mtime":1642708497524,"results":"55","hashOfConfig":"48"},{"size":1717,"mtime":1644622293762,"results":"56","hashOfConfig":"48"},{"size":2062,"mtime":1644622117890,"results":"57","hashOfConfig":"48"},{"size":227,"mtime":1644411900223,"results":"58","hashOfConfig":"48"},{"size":210,"mtime":1644422768404,"results":"59","hashOfConfig":"48"},{"size":1199,"mtime":1644619150441,"results":"60","hashOfConfig":"48"},{"size":884,"mtime":1644622276075,"results":"61","hashOfConfig":"48"},{"size":1774,"mtime":1644620513034,"results":"62","hashOfConfig":"48"},{"size":94,"mtime":1643613570706,"results":"63","hashOfConfig":"48"},{"size":1435,"mtime":1644619507950,"results":"64","hashOfConfig":"48"},{"size":411,"mtime":1644605744258,"results":"65","hashOfConfig":"48"},{"size":3024,"mtime":1643960005185,"results":"66","hashOfConfig":"48"},{"size":1085,"mtime":1644412173583,"results":"67","hashOfConfig":"48"},{"size":1271,"mtime":1643960054779,"results":"68","hashOfConfig":"48"},{"size":1477,"mtime":1644622389104,"results":"69","hashOfConfig":"48"},{"size":1436,"mtime":1644487077349,"results":"70","hashOfConfig":"48"},{"size":394,"mtime":1644487850755,"results":"71","hashOfConfig":"72"},{"size":362,"mtime":1642638282065,"results":"73","hashOfConfig":"72"},{"size":9250,"mtime":1649959575841,"results":"74","hashOfConfig":"72"},{"size":178,"mtime":1642708497524,"results":"75","hashOfConfig":"72"},{"size":1185,"mtime":1644622088111,"results":"76","hashOfConfig":"72"},{"size":1228,"mtime":1644529542187,"results":"77","hashOfConfig":"72"},{"size":2401,"mtime":1644622303947,"results":"78","hashOfConfig":"72"},{"size":1196,"mtime":1644622343072,"results":"79","hashOfConfig":"72"},{"size":2062,"mtime":1644622117890,"results":"80","hashOfConfig":"72"},{"size":1199,"mtime":1644619150441,"results":"81","hashOfConfig":"72"},{"size":1717,"mtime":1644622293762,"results":"82","hashOfConfig":"72"},{"size":194,"mtime":1649862358469,"results":"83","hashOfConfig":"72"},{"size":227,"mtime":1644411900223,"results":"84","hashOfConfig":"72"},{"size":1774,"mtime":1644620513034,"results":"85","hashOfConfig":"72"},{"size":1435,"mtime":1644619507950,"results":"86","hashOfConfig":"72"},{"size":94,"mtime":1643613570706,"results":"87","hashOfConfig":"72"},{"size":3622,"mtime":1649959271700,"results":"88","hashOfConfig":"72"},{"size":1193,"mtime":1649959147242,"results":"89","hashOfConfig":"72"},{"size":1279,"mtime":1649910745576,"results":"90","hashOfConfig":"72"},{"size":1477,"mtime":1644622389104,"results":"91","hashOfConfig":"72"},{"size":884,"mtime":1644622276075,"results":"92","hashOfConfig":"72"},{"size":411,"mtime":1644605744258,"results":"93","hashOfConfig":"72"},{"size":1436,"mtime":1644487077349,"results":"94","hashOfConfig":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9fjxir",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t19uo7",{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\index.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\reportWebVitals.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\App.js",["194"],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport { api } from '../utils/api.js';\nimport * as authApi from '../utils/authApi'\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\nimport NotFound from './NotFound';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmPopup from './ConfirmPopup';\nimport Register from './Register';\nimport Login from './Login';\nimport MenuMobile from './MenuMobile';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedCard, setDeletedCard] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isRegisterSuccessful, setRegisterSuccessful] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const navigate = useNavigate();\n  const [isShowMenu, setIsShowMenu] = React.useState('menu-mobile_type_close');\n  const [classHeaderMenu, setClassHeaderMenu] = React.useState('header__menu_type_closed');\n  const location = useLocation();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (!jwt) {\n      return\n    }\n    authApi.verifyUser(jwt)\n      .then((data) => {\n        setEmail(data.data.email);\n        setIsLoggedIn(true)\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()])\n        .then(([user, cards]) => {\n          setCurrentUser(user);\n          setCards(cards);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [isLoggedIn])\n\n  useEffect(() => {\n    isLoggedIn ? navigate('/react-mesto-auth') : navigate('/sign-in');\n  }, [isLoggedIn])\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsInfoToolTipOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard(null);\n    setDeletedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(name, description) {\n    setIsLoading(true);\n    api.editProfile({ name, description })\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api.updateUserAvatar(avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n      api.addLike(card._id)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {\n          console.log(err)\n        });\n    } else {\n      api.removeLike(card._id)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n  }\n\n  function handleCardDeleteSubmit(card) {\n    setIsLoading(true);\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards((cards) => {\n          return cards.filter(c => {\n            return c._id !== card._id\n          });\n        });\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleAddPlaceSubmit(name, link) {\n    setIsLoading(true);\n    api.addCard({ name, link })\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleConfirmCardDelete(card) {\n    setIsConfirmPopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  function onLogin(password, email) {\n    setIsLoading(true);\n    authApi.signIn(password, email)\n      .then((data) => {\n        const jwt = data.token;\n        localStorage.setItem('jwt', jwt);\n        setIsLoggedIn(true);\n        setEmail(email);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function onRegister(password, email) {\n    setIsLoading(true);\n    authApi.signUp(password, email)\n      .then((data) => {\n        setEmail(data.data.email);\n        setIsInfoToolTipOpen(true);\n        setRegisterSuccessful(true);\n        setIsLoggedIn(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInfoToolTipOpen(true);\n        setRegisterSuccessful(false);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function onLogOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n  }\n\n  function closeInfoToolTip() {\n    closeAllPopups();\n    isRegisterSuccessful ? navigate('/react-mesto-auth') : navigate('/sign-up');\n  }\n\n  function showMenu() {\n    if (isShowMenu === 'menu-mobile_type_close') {\n      setIsShowMenu('menu-mobile_type_open');\n    } else {\n      setIsShowMenu('menu-mobile_type_close');\n    }\n\n    if (classHeaderMenu === 'header__menu_type_opened') {\n      setClassHeaderMenu('header__menu_type_closed');\n    } else {\n      setClassHeaderMenu('header__menu_type_opened');\n    }\n  }\n\n\n  return (<CurrentUserContext.Provider value={currentUser}>\n    {isLoggedIn\n      && < MenuMobile\n        email={email}\n        onLogOut={onLogOut}\n        isShowMenu={isShowMenu}\n      />\n    }\n\n\n    <Header isLoggedIn={isLoggedIn}\n      email={email || ''}\n      onLogOut={onLogOut}\n      showMenu={showMenu}\n      locaction={location}\n      classHeaderMenu={classHeaderMenu} />\n    <Routes>\n      <Route path={'/react-mesto-auth'}\n        element={<ProtectedRoute isLoggedIn={isLoggedIn}>\n          <Main onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmCardDelete} />\n        </ProtectedRoute>} />\n      <Route path={'/sign-up'}\n        element={<Register isLoading={isLoading}\n          onRegister={onRegister} />}\n        isLoggedIn={isLoggedIn} />\n      <Route path={'/sign-in'}\n        element={<Login onLogin={onLogin}\n          isLoggedIn={isLoggedIn}\n          isLoading={isLoading} />} />\n      <Route path={'*'}\n        element={<NotFound isLoggedIn={isLoggedIn} />} />\n    </Routes>\n    <Footer />\n    <EditProfilePopup isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      onUpdateUser={handleUpdateUser}\n      onLoading={isLoading} />\n    <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}\n      onUpdateAvatar={handleUpdateAvatar}\n      onLoading={isLoading} />\n    <AddPlacePopup isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      onAddPlace={handleAddPlaceSubmit}\n      onLoading={isLoading} />\n    <ConfirmPopup isOpen={isConfirmPopupOpen}\n      onClose={closeAllPopups}\n      onLoading={isLoading}\n      card={deletedCard}\n      onSubmit={handleCardDeleteSubmit} />\n    <ImagePopup card={selectedCard}\n      isOpen={isImagePopupOpen}\n      onClose={closeAllPopups} />\n    <InfoToolTip isSuccess={isRegisterSuccessful}\n      isOpen={isInfoToolTipOpen}\n      onClose={closeInfoToolTip} />\n  </CurrentUserContext.Provider>)\n}\n\nexport default App;\n\n","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Header.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Main.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js",["195"],"import { useContext, useEffect, useMemo } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport useInput from '../utils/formValidator'\r\n\r\nfunction EditProfilePopup({ onLoading, onClose, onUpdateUser, isOpen }) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const initialValues = useMemo(() => ({ name: '', about: '' }), [])\r\n  const validation = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateUser(validation.values.name, validation.values.about)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      validation.setValues((prev) => ({\r\n        ...prev,\r\n        name: currentUser.name,\r\n        about: currentUser.about\r\n      }));\r\n    } else {\r\n      validation.resetForm()\r\n    }\r\n  }, [isOpen, currentUser])\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  return (\r\n    <PopupWithForm name={'profile'} title={'Редактировать профиль'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}\r\n      isLoading={onLoading} isValid={validation.isValid} buttonText={'Сохранить'} loadingText={'Сохранение...'}\r\n    >\r\n      <fieldset className={'popup__fieldset'}>\r\n        <input type=\"text\" className=\"popup__input popup__input_type_name\" name=\"name\" placeholder=\"Имя\" value={validation.values.name} onChange={validation.handleChange}\r\n          id=\"nameInput\" minLength=\"2\" maxLength=\"40\" required\r\n        />\r\n        <span className={`popup__input-error name-input-error popup__input-error_active`}>{validation.errors.name}\r\n        </span>\r\n        <input type=\"text\" className=\"popup__input popup__input_type_job\" name=\"about\" value={validation.values.about} onChange={validation.handleChange}\r\n          placeholder=\"О себе\" id=\"about-input\" minLength=\"2\" maxLength=\"200\" required\r\n        />\r\n        <span className={`popup__input-error description-input-error popup__input-error_active`}>{validation.errors.about}\r\n        </span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup;","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Footer.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js",["196"],"import PopupWithForm from './PopupWithForm';\r\nimport useInput from '../utils/formValidator';\r\nimport { useEffect, useMemo } from 'react';\r\n\r\nfunction EditAvatarPopup({ onLoading, isOpen, onUpdateAvatar, onClose }) {\r\n  const isLoading = onLoading;\r\n  const initialValues = useMemo(() => {\r\n    return { link: '' }\r\n  }, [])\r\n  const avatar = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar(avatar.values.link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    !isOpen && avatar.resetForm();\r\n  }, [isOpen])\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  return (\r\n    <PopupWithForm name={'avatar'} title={'Обновить аватар'} isOpen={isOpen}\r\n      onClose={onClose} onSubmit={handleSubmit} isLoading={isLoading} isValid={avatar.isValid} buttonText={'Сохранить'} loadingText={'Сохранение...'}\r\n    >\r\n      <fieldset className={'popup__fieldset'}>\r\n        <input type=\"url\" className=\"popup__input popup__input_type_avatar\" name=\"link\"\r\n          onChange={avatar.handleChange}\r\n          value={avatar.values.link}\r\n          placeholder=\"Ссылка на картинку\"\r\n          id=\"avatar-link\"\r\n          required\r\n        />\r\n        <span className={`popup__input-error popup__input-error_active avatar-link-error`}>\r\n          {avatar.errors.link}\r\n        </span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js",["197"],"import PopupWithForm from './PopupWithForm.js';\r\nimport useInput from '../utils/formValidator.js';\r\nimport { useEffect, useMemo } from 'react';\r\n\r\nfunction AddPlacePopup({ onLoading, isOpen, onAddPlace, onClose }) {\r\n  const initialValues = useMemo(() => {\r\n    return { name: '', link: '' }\r\n  }, [])\r\n  const validation = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(validation.values.name, validation.values.link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  useEffect(() => {\r\n    !isOpen && validation.resetForm();\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm name={'card'} title={'Новое место'} isOpen={isOpen}\r\n      onClose={onClose} onSubmit={handleSubmit} isValid={validation.isValid} isLoading={onLoading} buttonText={'Создать'} loadingText={'Сохранение...'}\r\n    >\r\n      <fieldset className={'popup__fieldset'}>\r\n        <input type=\"text\" className=\"popup__input popup__input_type_card\" name=\"name\" value={validation.values.name}\r\n          onChange={validation.handleChange} placeholder=\"Название\" id=\"card\" minLength=\"2\" maxLength=\"20\" required\r\n        />\r\n        <span className={`popup__input-error card-error popup__input-error_active`}>\r\n          {validation.errors.name}\r\n        </span>\r\n        <input type=\"url\" className=\"popup__input popup__input_type_link\" name=\"link\" value={validation.values.link} onChange={validation.handleChange}\r\n          placeholder=\"Ссылка на картинку\" id=\"link\" required\r\n        />\r\n        <span className={`popup__input-error link-error popup__input-error_active`}>\r\n          {validation.errors.link}\r\n        </span>\r\n      </fieldset>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\NotFound.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\InfoToolTip.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\ConfirmPopup.js",["198"],"import PopupWithForm from './PopupWithForm';\r\nimport { useEffect } from 'react';\r\n\r\nfunction ConfirmPopup({ isOpen, onSubmit, onLoading, onClose, card }) {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onSubmit(card)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n    function handleEscClose(e) {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleEscClose);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscClose);\r\n    }\r\n  }, [isOpen, onClose])\r\n\r\n  return (\r\n    <PopupWithForm name={'confirm'} title={'Вы уверены?'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}\r\n      isLoading={onLoading} card={card} buttonText={'Да'} loadingText={'Удаление...'} card={card}\r\n    >\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default ConfirmPopup;\r\n","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Register.js",["199"],"import { Link } from 'react-router-dom';\r\nimport useInput from '../utils/formValidator';\r\nimport { useMemo } from 'react';\r\n\r\nfunction Register({ isLoading, onRegister }) {\r\n  const initialValues = useMemo(() => { return { email: '', password: '' } }, []);\r\n  const { values, errors, isValid, handleChange } = useInput(initialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onRegister(values.password, values.email);\r\n  }\r\n\r\n  return (\r\n    <div className={'auth page__auth'}>\r\n      <form className={'auth-form'} name={'registration-form'} noValidate={true} onSubmit={handleSubmit}>\r\n        <h2 className={'auth-form__title'}>Регистрация</h2>\r\n        <input className={'auth-form__input'} type={'email'} name={'email'} placeholder={'Email'} required={true} onChange={handleChange} value={values.email} />\r\n        <span className={'auth-form__input-error'}>{errors.email}</span>\r\n        <input className={'auth-form__input'} type={'password'} name={'password'} placeholder={'Пароль'} required={true} onChange={handleChange}\r\n          value={values.password} minLength={'8'}\r\n        />\r\n        <span className={'auth-form__input-error'}>{errors.password}</span>\r\n        <button type={'submit'} className={`auth-form__submit-button ${(!isValid || isLoading) && 'auth-form__submit-button_inactive'}`}>\r\n          {(!isLoading) ? 'Зарегистрироваться' : 'Регистрация ...'}\r\n        </button>\r\n        <p className={'auth-form__signin-link'}>Уже зарегистрированы?\r\n          <Link to={'/sign-in'} className={'auth-form__signin-link ' + 'auth-form__signin-link_active'}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>)\r\n}\r\n\r\nexport default Register","C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Login.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\MenuMobile.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\utils\\api.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\utils\\authApi.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\Card.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js",[],"C:\\Users\\stanv\\dev\\react-mesto-auth\\src\\utils\\formValidator.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["200"],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport { api } from '../utils/api.js';\nimport * as authApi from '../utils/authApi'\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\nimport NotFound from './NotFound';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ConfirmPopup from './ConfirmPopup';\nimport Register from './Register';\nimport Login from './Login';\nimport MenuMobile from './MenuMobile';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [deletedCard, setDeletedCard] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [isRegisterSuccessful, setRegisterSuccessful] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n  const navigate = useNavigate();\n  const [isShowMenu, setIsShowMenu] = React.useState('menu-mobile_type_close');\n  const [classHeaderMenu, setClassHeaderMenu] = React.useState('header__menu_type_closed');\n  const location = useLocation();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (!jwt) {\n      return\n    }\n    authApi.verifyUser(jwt)\n      .then((data) => {\n        setEmail(data.email);\n        setIsLoggedIn(true)\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(jwt), api.getInitialCards(jwt)])\n        .then(([user, cards]) => {\n          setCurrentUser(user);\n          setCards(cards);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [isLoggedIn])\n\n  useEffect(() => {\n    isLoggedIn ? navigate('/') : navigate('/sign-in');\n  }, [isLoggedIn])\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setIsInfoToolTipOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard(null);\n    setDeletedCard(null);\n  }\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(name, description) {\n    setIsLoading(true);\n    const jwt = localStorage.getItem('jwt');\n    api.editProfile({name, description}, jwt)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    const jwt = localStorage.getItem('jwt');\n    setIsLoading(true);\n    api.updateUserAvatar(avatar, jwt)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    const jwt = localStorage.getItem('jwt');\n    if (!isLiked) {\n      api.likeCard(card._id, jwt)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {\n          console.log(err)\n        });\n    } else {\n      api.dislikeCard(card._id, jwt)\n        .then((newCard) => {\n          setCards((cards) => cards.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n  }\n\n  function handleCardDeleteSubmit(card) {\n    const jwt = localStorage.getItem('jwt');\n    setIsLoading(true);\n    api.deleteCard(card._id, jwt)\n      .then(() => {\n        setCards((cards) => {\n          return cards.filter(c => {\n            return c._id !== card._id\n          });\n        });\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleAddPlaceSubmit(name, link) {\n    const jwt = localStorage.getItem('jwt');\n    setIsLoading(true);\n    api.addNewCard({name, link}, jwt)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function handleConfirmCardDelete(card) {\n    setIsConfirmPopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  function onLogin(password, email) {\n    setIsLoading(true);\n    authApi.signIn(password, email)\n      .then((data) => {\n        const jwt = data.token;\n        localStorage.setItem('jwt', jwt);\n        setIsLoggedIn(true);\n        setEmail(email);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function onRegister(password, email) {\n    setIsLoading(true);\n    authApi.signUp(password, email)\n      .then((data) => {\n        setEmail(data.email);\n        setIsInfoToolTipOpen(true);\n        setRegisterSuccessful(true);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsInfoToolTipOpen(true);\n        setRegisterSuccessful(false);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  function onLogOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n  }\n\n  function closeInfoToolTip() {\n    closeAllPopups();\n    isRegisterSuccessful ? navigate('/') : navigate('/sign-up');\n  }\n\n  function showMenu() {\n    if (isShowMenu === 'menu-mobile_type_close') {\n      setIsShowMenu('menu-mobile_type_open');\n    } else {\n      setIsShowMenu('menu-mobile_type_close');\n    }\n\n    if (classHeaderMenu === 'header__menu_type_opened') {\n      setClassHeaderMenu('header__menu_type_closed');\n    } else {\n      setClassHeaderMenu('header__menu_type_opened');\n    }\n  }\n\n\n  return (<CurrentUserContext.Provider value={currentUser}>\n    {isLoggedIn\n      && < MenuMobile\n        email={email}\n        onLogOut={onLogOut}\n        isShowMenu={isShowMenu}\n      />\n    }\n\n\n    <Header isLoggedIn={isLoggedIn}\n      email={email || ''}\n      onLogOut={onLogOut}\n      showMenu={showMenu}\n      locaction={location}\n      classHeaderMenu={classHeaderMenu} />\n    <Routes>\n      <Route path={'/'}\n        element={<ProtectedRoute isLoggedIn={isLoggedIn}>\n          <Main onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmCardDelete} />\n        </ProtectedRoute>} />\n      <Route path={'/sign-up'}\n        element={<Register isLoading={isLoading}\n          onRegister={onRegister} />}\n        isLoggedIn={isLoggedIn} />\n      <Route path={'/sign-in'}\n        element={<Login onLogin={onLogin}\n          isLoggedIn={isLoggedIn}\n          isLoading={isLoading} />} />\n      <Route path={'*'}\n        element={<NotFound isLoggedIn={isLoggedIn} />} />\n    </Routes>\n    <Footer />\n    <EditProfilePopup isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      onUpdateUser={handleUpdateUser}\n      onLoading={isLoading} />\n    <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n      onClose={closeAllPopups}\n      onUpdateAvatar={handleUpdateAvatar}\n      onLoading={isLoading} />\n    <AddPlacePopup isOpen={isAddPlacePopupOpen}\n      onClose={closeAllPopups}\n      onAddPlace={handleAddPlaceSubmit}\n      onLoading={isLoading} />\n    <ConfirmPopup isOpen={isConfirmPopupOpen}\n      onClose={closeAllPopups}\n      onLoading={isLoading}\n      card={deletedCard}\n      onSubmit={handleCardDeleteSubmit} />\n    <ImagePopup card={selectedCard}\n      isOpen={isImagePopupOpen}\n      onClose={closeAllPopups} />\n    <InfoToolTip isSuccess={isRegisterSuccessful}\n      isOpen={isInfoToolTipOpen}\n      onClose={closeInfoToolTip} />\n  </CurrentUserContext.Provider>)\n}\n\nexport default App;\n\n","C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",["201"],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",["202"],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoToolTip.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",["203"],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\NotFound.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",["204"],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\utils\\authApi.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\ConfirmPopup.js",["205"],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\components\\MenuMobile.js",[],"C:\\Users\\stanv\\dev\\react-mesto-api-full\\frontend\\src\\utils\\formValidator.js",[],{"ruleId":"206","severity":1,"message":"207","line":77,"column":6,"nodeType":"208","endLine":77,"endColumn":18,"suggestions":"209"},{"ruleId":"206","severity":1,"message":"210","line":26,"column":6,"nodeType":"208","endLine":26,"endColumn":27,"suggestions":"211"},{"ruleId":"206","severity":1,"message":"212","line":19,"column":6,"nodeType":"208","endLine":19,"endColumn":14,"suggestions":"213"},{"ruleId":"206","severity":1,"message":"210","line":31,"column":6,"nodeType":"208","endLine":31,"endColumn":14,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":26,"column":87,"nodeType":"217","messageId":"218","endLine":26,"endColumn":98},{"ruleId":"219","severity":1,"message":"220","line":28,"column":70,"nodeType":"221","messageId":"222","endLine":28,"endColumn":71},{"ruleId":"206","severity":1,"message":"207","line":78,"column":6,"nodeType":"208","endLine":78,"endColumn":18,"suggestions":"223"},{"ruleId":"206","severity":1,"message":"210","line":26,"column":6,"nodeType":"208","endLine":26,"endColumn":27,"suggestions":"224"},{"ruleId":"206","severity":1,"message":"210","line":31,"column":6,"nodeType":"208","endLine":31,"endColumn":14,"suggestions":"225"},{"ruleId":"206","severity":1,"message":"212","line":19,"column":6,"nodeType":"208","endLine":19,"endColumn":14,"suggestions":"226"},{"ruleId":"219","severity":1,"message":"220","line":28,"column":70,"nodeType":"221","messageId":"222","endLine":28,"endColumn":71},{"ruleId":"215","severity":1,"message":"216","line":26,"column":87,"nodeType":"217","messageId":"218","endLine":26,"endColumn":98},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'validation'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'avatar'. Either include it or remove the dependency array.",["229"],["230"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["231"],["232"],["233"],["234"],{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"235","fix":"243"},{"desc":"237","fix":"244"},{"desc":"241","fix":"245"},{"desc":"239","fix":"246"},"Update the dependencies array to be: [isLoggedIn, navigate]",{"range":"247","text":"248"},"Update the dependencies array to be: [isOpen, currentUser, validation]",{"range":"249","text":"250"},"Update the dependencies array to be: [avatar, isOpen]",{"range":"251","text":"252"},"Update the dependencies array to be: [isOpen, validation]",{"range":"253","text":"254"},{"range":"255","text":"248"},{"range":"256","text":"250"},{"range":"257","text":"254"},{"range":"258","text":"252"},[2734,2746],"[isLoggedIn, navigate]",[834,855],"[isOpen, currentUser, validation]",[535,543],"[avatar, isOpen]",[872,880],"[isOpen, validation]",[2764,2776],[834,855],[872,880],[535,543]]